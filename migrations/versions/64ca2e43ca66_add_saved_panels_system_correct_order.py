"""Add saved panels system - correct order

Revision ID: 64ca2e43ca66
Revises: 
Create Date: 2025-08-03 19:33:30.448876

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '64ca2e43ca66'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Create saved_panels without current_version_id foreign key
    op.create_table('saved_panels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'ARCHIVED', 'DELETED', 'DRAFT', name='panelstatus'), nullable=False),
    sa.Column('visibility', sa.Enum('PRIVATE', 'SHARED', 'PUBLIC', name='panelvisibility'), nullable=False),
    sa.Column('gene_count', sa.Integer(), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=True),
    sa.Column('source_reference', sa.String(length=255), nullable=True),
    sa.Column('current_version_id', sa.Integer(), nullable=True),
    sa.Column('version_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=False),
    sa.Column('storage_backend', sa.String(length=20), nullable=False),
    sa.Column('storage_path', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('saved_panels', schema=None) as batch_op:
        batch_op.create_index('idx_saved_panels_created', ['created_at'], unique=False)
        batch_op.create_index('idx_saved_panels_name_owner', ['name', 'owner_id'], unique=False)
        batch_op.create_index('idx_saved_panels_owner_status', ['owner_id', 'status'], unique=False)
        batch_op.create_index('idx_saved_panels_updated', ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_saved_panels_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_saved_panels_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_saved_panels_owner_id'), ['owner_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_saved_panels_status'), ['status'], unique=False)

    # Step 2: Create panel_versions now that saved_panels exists
    op.create_table('panel_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('panel_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('gene_count', sa.Integer(), nullable=True),
    sa.Column('changes_summary', sa.Text(), nullable=True),
    sa.Column('storage_path', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['panel_id'], ['saved_panels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('panel_id', 'version_number', name='uq_panel_version')
    )
    with op.batch_alter_table('panel_versions', schema=None) as batch_op:
        batch_op.create_index('idx_panel_versions_created', ['created_at'], unique=False)
        batch_op.create_index('idx_panel_versions_panel_version', ['panel_id', 'version_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_versions_panel_id'), ['panel_id'], unique=False)

    op.create_table('panel_changes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('panel_id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.Enum('GENE_ADDED', 'GENE_REMOVED', 'GENE_MODIFIED', 'METADATA_CHANGED', 'CONFIDENCE_CHANGED', 'SOURCE_UPDATED', name='changetype'), nullable=False),
    sa.Column('target_type', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.String(length=100), nullable=True),
    sa.Column('old_value_encrypted', sa.Text(), nullable=True),
    sa.Column('new_value_encrypted', sa.Text(), nullable=True),
    sa.Column('changed_by_id', sa.Integer(), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=False),
    sa.Column('change_reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['panel_id'], ['saved_panels.id'], ),
    sa.ForeignKeyConstraint(['version_id'], ['panel_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('panel_changes', schema=None) as batch_op:
        batch_op.create_index('idx_panel_changes_date', ['changed_at'], unique=False)
        batch_op.create_index('idx_panel_changes_panel_version', ['panel_id', 'version_id'], unique=False)
        batch_op.create_index('idx_panel_changes_type', ['change_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_changes_panel_id'), ['panel_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_changes_version_id'), ['version_id'], unique=False)

    op.create_table('panel_genes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('panel_id', sa.Integer(), nullable=False),
    sa.Column('gene_symbol', sa.String(length=50), nullable=False),
    sa.Column('gene_name', sa.String(length=255), nullable=True),
    sa.Column('ensembl_id', sa.String(length=50), nullable=True),
    sa.Column('hgnc_id', sa.String(length=20), nullable=True),
    sa.Column('confidence_level', sa.String(length=20), nullable=True),
    sa.Column('mode_of_inheritance', sa.String(length=100), nullable=True),
    sa.Column('phenotype', sa.Text(), nullable=True),
    sa.Column('evidence_level', sa.String(length=20), nullable=True),
    sa.Column('source_panel_id', sa.String(length=50), nullable=True),
    sa.Column('source_list_type', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('added_by_id', sa.Integer(), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('user_notes', sa.Text(), nullable=True),
    sa.Column('custom_confidence', sa.String(length=20), nullable=True),
    sa.Column('is_modified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['added_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['panel_id'], ['saved_panels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('panel_id', 'gene_symbol', name='uq_panel_gene_symbol')
    )
    with op.batch_alter_table('panel_genes', schema=None) as batch_op:
        batch_op.create_index('idx_panel_genes_panel_active', ['panel_id', 'is_active'], unique=False)
        batch_op.create_index('idx_panel_genes_panel_symbol', ['panel_id', 'gene_symbol'], unique=False)
        batch_op.create_index('idx_panel_genes_symbol', ['gene_symbol'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_genes_ensembl_id'), ['ensembl_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_genes_gene_symbol'), ['gene_symbol'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_genes_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_genes_panel_id'), ['panel_id'], unique=False)

    op.create_table('panel_shares',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('panel_id', sa.Integer(), nullable=False),
    sa.Column('shared_by_id', sa.Integer(), nullable=False),
    sa.Column('shared_with_user_id', sa.Integer(), nullable=True),
    sa.Column('shared_with_team_id', sa.Integer(), nullable=True),
    sa.Column('permission_level', sa.Enum('VIEW', 'COMMENT', 'EDIT', 'ADMIN', name='sharepermission'), nullable=False),
    sa.Column('can_reshare', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('share_token', sa.String(length=255), nullable=True),
    sa.CheckConstraint('(shared_with_user_id IS NOT NULL) OR (shared_with_team_id IS NOT NULL) OR (share_token IS NOT NULL)', name='check_share_target'),
    sa.ForeignKeyConstraint(['panel_id'], ['saved_panels.id'], ),
    sa.ForeignKeyConstraint(['shared_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['shared_with_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('panel_shares', schema=None) as batch_op:
        batch_op.create_index('idx_panel_shares_panel_active', ['panel_id', 'is_active'], unique=False)
        batch_op.create_index('idx_panel_shares_user_active', ['shared_with_user_id', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_shares_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_shares_panel_id'), ['panel_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_panel_shares_share_token'), ['share_token'], unique=True)

    # Step 3: Add the foreign key constraint for current_version_id now that panel_versions exists
    with op.batch_alter_table('saved_panels', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_saved_panels_current_version', 'panel_versions', ['current_version_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Drop the foreign key constraint for current_version_id first
    with op.batch_alter_table('saved_panels', schema=None) as batch_op:
        batch_op.drop_constraint('fk_saved_panels_current_version', type_='foreignkey')

    with op.batch_alter_table('panel_shares', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_panel_shares_share_token'))
        batch_op.drop_index(batch_op.f('ix_panel_shares_panel_id'))
        batch_op.drop_index(batch_op.f('ix_panel_shares_is_active'))
        batch_op.drop_index('idx_panel_shares_user_active')
        batch_op.drop_index('idx_panel_shares_panel_active')

    op.drop_table('panel_shares')
    with op.batch_alter_table('panel_genes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_panel_genes_panel_id'))
        batch_op.drop_index(batch_op.f('ix_panel_genes_is_active'))
        batch_op.drop_index(batch_op.f('ix_panel_genes_gene_symbol'))
        batch_op.drop_index(batch_op.f('ix_panel_genes_ensembl_id'))
        batch_op.drop_index('idx_panel_genes_symbol')
        batch_op.drop_index('idx_panel_genes_panel_symbol')
        batch_op.drop_index('idx_panel_genes_panel_active')

    op.drop_table('panel_genes')
    with op.batch_alter_table('panel_changes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_panel_changes_version_id'))
        batch_op.drop_index(batch_op.f('ix_panel_changes_panel_id'))
        batch_op.drop_index('idx_panel_changes_type')
        batch_op.drop_index('idx_panel_changes_panel_version')
        batch_op.drop_index('idx_panel_changes_date')

    op.drop_table('panel_changes')
    with op.batch_alter_table('saved_panels', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_saved_panels_status'))
        batch_op.drop_index(batch_op.f('ix_saved_panels_owner_id'))
        batch_op.drop_index(batch_op.f('ix_saved_panels_name'))
        batch_op.drop_index(batch_op.f('ix_saved_panels_created_at'))
        batch_op.drop_index('idx_saved_panels_updated')
        batch_op.drop_index('idx_saved_panels_owner_status')
        batch_op.drop_index('idx_saved_panels_name_owner')
        batch_op.drop_index('idx_saved_panels_created')

    op.drop_table('saved_panels')
    with op.batch_alter_table('panel_versions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_panel_versions_panel_id'))
        batch_op.drop_index('idx_panel_versions_panel_version')
        batch_op.drop_index('idx_panel_versions_created')

    op.drop_table('panel_versions')
    # ### end Alembic commands ###
